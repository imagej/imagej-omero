#!/bin/sh

# imagej-omero: Adds ImageJ capabilities to your OMERO installation.

set -e

# -- Sanity checks --

if [ ! -d "$OMERO_HOME/lib" ]
then
	echo "Please set OMERO_HOME to a valid OMERO installation."
	exit 1
fi

# -- Constants --

JENKINS="http://jenkins.imagej.net/job"
A="lastSuccessfulBuild/artifact"
MAVEN="http://maven.imagej.net/content/repositories/releases"

IJ_DIR="$OMERO_HOME/lib/ImageJ.app"

# -- Subroutines --

download () {
	name="$1"
	url="$2"
	dest="$3"
	echo "-> downloading $name"
	curl -fs "$url" > "$dest" || die "Failed to download: $url"
}

die () {
	echo "$*" >&2
	exit 1
}

# -- Download and install ImageJ --

IJ_APP="imagej-2.0.0-SNAPSHOT-application.zip"

if [ -d "$IJ_DIR" ]
then
	echo "ImageJ installation already exists; skipping."
else
	download "$IJ_APP" \
		"$JENKINS/ImageJ/$A/app/target/$IJ_APP" \
		"$OMERO_HOME/lib/$IJ_APP"
	echo "-> extracting $IJ_APP"
	(
		cd "$OMERO_HOME/lib" &&
		unzip -q "$IJ_APP" &&
		rm "$IJ_APP"
	)
fi

# -- Download and install SciJava SLF4J logging --

download "SciJava SLF4J logging" \
	"$MAVEN/org/scijava/scijava-log-slf4j/1.0.0/scijava-log-slf4j-1.0.0.jar" \
	"$IJ_DIR/jars/scijava-log-slf4j-1.0.0.jar"

# -- Replace SCIFIO with development version --

SCIFIO="scifio-0.10.3-SNAPSHOT.jar"

rm "$IJ_DIR/jars/scifio-"[0-9]*.jar
download "$SCIFIO" \
	"$JENKINS/SCIFIO/$A/scifio/target/$SCIFIO" \
	"$IJ_DIR/jars/$SCIFIO"

# -- Download and install ImageJ-OMERO --

IJ_OMERO="ij-omero-0.1.0-SNAPSHOT.jar"
SCIFIO_OMERO="scifio-omero-0.3.0-SNAPSHOT.jar"

download "$IJ_OMERO" \
	"$JENKINS/ImageJ-OMERO/$A/target/$IJ_OMERO" \
	"$IJ_DIR/jars/$IJ_OMERO"
download "$SCIFIO_OMERO" \
	"$JENKINS/SCIFIO-OMERO/$A/target/$SCIFIO_OMERO" \
	"$IJ_DIR/jars/$SCIFIO_OMERO"

# -- Download and install tutorial commands --

TUTORIALS="$JENKINS/ImageJ-tutorials/$A"
SIMPLE_COMMANDS="simple-commands-1.0.0-SNAPSHOT.jar"
WIDGET_DEMO="widget-demo-1.0.0-SNAPSHOT.jar"

download "$SIMPLE_COMMANDS" \
	"$TUTORIALS/simple-commands/target/$SIMPLE_COMMANDS" \
	"$IJ_DIR/plugins/$SIMPLE_COMMANDS"
download "$WIDGET_DEMO" \
	"$TUTORIALS/widget-demo/target/$WIDGET_DEMO" \
	"$IJ_DIR/plugins/$WIDGET_DEMO"

# -- Generate ImageJ scripts --

GEN_SCRIPT="genScripts.jy"
GEN_SCRIPT_URL="https://raw.github.com/imagej/imagej-omero/master/bin/$GEN_SCRIPT"
GEN_SCRIPT_PATH="$OMERO_HOME/lib/$GEN_SCRIPT"
GEN_SCRIPT_CMD="jython $GEN_SCRIPT_PATH"

download "$GEN_SCRIPT" "$GEN_SCRIPT_URL" "$GEN_SCRIPT_PATH"

echo "-> generating OMERO scripts"
(
	$GEN_SCRIPT_CMD > /dev/null &&
	echo "$(find "$OMERO_HOME/lib/scripts/imagej" | wc -l) scripts generated."
)

echo
echo "To regenerate scripts, run:"
echo "    $GEN_SCRIPT_CMD"
