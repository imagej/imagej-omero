#!/bin/sh

# imagej-omero: Adds ImageJ capabilities to your OMERO installation.

# TODO: two modes! default mode is release versions for stability
# other mode is symlinks to ~/.m2/repository latest SNAPSHOTs
# want latest available version of each dep in a list
# another option is to use env variables

set -e

# -- Sanity checks --

if [ ! -d "$OMERO_HOME/lib" ]
then
	echo "Please set OMERO_HOME to a valid OMERO installation."
	exit 1
fi

# -- Constants --

JENKINS="http://jenkins.imagej.net/job"
A="lastSuccessfulBuild/artifact"
MAVEN="http://maven.imagej.net/content/repositories/releases"

IJ_DIR="$OMERO_HOME/lib/ImageJ.app"

# -- Download and install ImageJ --

IJ_APP="imagej-2.0.0-SNAPSHOT-application.zip"

if [ -d "$IJ_DIR" ]
then
	echo "ImageJ installation already exists; skipping."
else
	echo "-> downloading $IJ_APP"
	curl -s "$JENKINS/ImageJ/$A/app/target/$IJ_APP" > "$OMERO_HOME/lib/$IJ_APP"
	echo "-> extracting $IJ_APP"
	(
		cd "$OMERO_HOME/lib" &&
		unzip -q "$IJ_APP" &&
		rm "$IJ_APP"
	)
fi

# -- Download and install SciJava SLF4J logging --

echo "-> downloading SciJava SLF4J logging"
curl -s "http://maven.imagej.net/service/local/repositories/snapshots/content/org/scijava/scijava-log-slf4j/1.0.0-SNAPSHOT/scijava-log-slf4j-1.0.0.jar" > "$IJ_DIR/jars/scijava-log-slf4j-1.0.0.jar"

# -- Replace SCIFIO with development version --

SCIFIO="scifio-0.10.2-SNAPSHOT.jar"

echo "-> downloading $SCIFIO"
rm "$IJ_DIR/jars/scifio-"[0-9]*.jar
curl -s "$JENKINS/SCIFIO/$A/target/$SCIFIO" > "$IJ_DIR/jars/$SCIFIO"

# -- Download and install ImageJ-OMERO --

IJ_OMERO="ij-omero-0.1.0-SNAPSHOT.jar"
SCIFIO_OMERO="scifio-omero-0.3.0-SNAPSHOT.jar"

echo "-> downloading $IJ_OMERO"
curl -s "$JENKINS/ImageJ-OMERO/$A/target/$IJ_OMERO" > "$IJ_DIR/jars/$IJ_OMERO"
echo "-> downloading $SCIFIO_OMERO"
curl -s "$MAVEN/io/scif/scifio-omero/0.2.1/$SCIFIO_OMERO" \
	> "$IJ_DIR/jars/$SCIFIO_OMERO"

# -- Download and install tutorial commands --

TUTORIALS="$JENKINS/ImageJ-tutorials/$A"
SIMPLE_COMMANDS="simple-commands-1.0.0-SNAPSHOT.jar"
WIDGET_DEMO="widget-demo-1.0.0-SNAPSHOT.jar"

echo "-> downloading $SIMPLE_COMMANDS"
curl -s "$TUTORIALS/simple-commands/target/$SIMPLE_COMMANDS" \
	> "$IJ_DIR/plugins/$SIMPLE_COMMANDS"
echo "-> downloading $WIDGET_DEMO"
curl -s "$TUTORIALS/widget-demo/target/$WIDGET_DEMO" \
	> "$IJ_DIR/plugins/$WIDGET_DEMO"

# -- Generate ImageJ scripts --

GEN_SCRIPT="genScripts.jy"
GEN_SCRIPT_URL="https://raw.github.com/imagej/imagej-omero/master/bin/$GEN_SCRIPT"
GEN_SCRIPT_PATH="$OMERO_HOME/lib/$GEN_SCRIPT"
GEN_SCRIPT_CMD="jython $GEN_SCRIPT_PATH"

echo "-> downloading $GEN_SCRIPT"
curl -s "$GEN_SCRIPT_URL" > "$GEN_SCRIPT_PATH"

echo "-> generating OMERO scripts"
(
	$GEN_SCRIPT_CMD > /dev/null &&
	echo "$(ls "$OMERO_HOME/scripts/imagej/*" | wc -l) scripts generated."
)

echo
echo "To regenerate scripts, run:"
echo "    $GEN_SCRIPT_CMD"
